import Head from 'next/head'
import Link from 'next/link'

import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faFacebook, faGithub, faGoogle } from '@fortawesome/free-brands-svg-icons'

import { getSession, signIn } from "next-auth/react"
import { useState } from 'react'

export default function Signup() {

    const [name, setName] = useState("")
    const [email, setEmail] = useState("")
    const [password, setPassword] = useState("")

    const [error, setError] = useState(false)

    const handleSubmit = async(e) => {
        e.preventDefault()
        const data = {name, email, password}

        try {
            const req = await fetch("http://localhost:3000/api/users", {
                method: "POST",
                headers: {'Content-Type': 'application/json'}, 
                body: JSON.stringify(data)
            })
            if(!req.ok) throw new Error("Error Posting Data")
            
        } catch (err) {
            console.log(err)
            setError(true)
        }
    }

  return (
    <main className='w-full h-screen flex'>
      <Head>
        <title>Sign Up | Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className='hidden w-1/2 bg-blue-500 rounded rounded-r-none lg:block'></div>

      <form onSubmit={ handleSubmit } className='w-full lg:w-1/2 h-full bg-white rounded rounded-l-none flex flex-col justify-center'>

        {/* Logo */}

        {/* Header */}
        <header className='w-96 mx-auto px-4 mb-6'>
          <h1 className='text-3xl font-semibold text-center mb-2'>Welcome</h1>
          <p className='text-sm text-gray-500 text-center'>Start Blogging, Its Free!</p>
        </header>

        {/* Name, Email and Password */}
        <div className='flex flex-col items-center w-full'>

            <div className='w-96 flex shadow-sm my-1'>
                <input onChange={(e) => { setName(e.target.value)}} value={name} type="text" className=' w-full p-3 rounded rounded-r-none border-r-0 bg-gray-50 outline-none border-2 duration-100 text-sm text-gray-400' placeholder='Full Name' required/>

                <aside className='h-full w-12 flex items-center rounded rounded-l-none border-2 border-l-0 bg-gray-50'>
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 stroke-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
                    </svg>
                </aside>
            </div>

            <div className='w-96 flex shadow-sm my-1'>
            <input onChange={(e) => { setEmail(e.target.value)}} value={email} type="email" className=' w-full p-3 rounded rounded-r-none border-r-0 bg-gray-50 outline-none border-2 duration-100 text-sm text-gray-400' placeholder='Email' required/>

            <aside className='h-full w-12 flex items-center rounded rounded-l-none border-2 border-l-0 bg-gray-50'>
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 stroke-gray-400" fill="none" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207" />
                </svg>
            </aside>
            </div>

            <div className='w-96 flex shadow-sm my-1'>
            <input onChange={(e) => { setPassword(e.target.value)}} value={password} type="password" className=' w-full p-3 rounded rounded-r-none border-r-0 bg-gray-50 outline-none border-2 duration-100 text-sm text-gray-400' placeholder='Password' required/>

            <aside className='h-full w-12 flex items-center rounded rounded-l-none border-2 border-l-0 bg-gray-50'>
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 stroke-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                </svg>
            </aside>
            </div>
        </div>

        {/* Signup and Oauth Button */}
        <div className='flex flex-col items-center w-full my-8 text-sm'>
          <button type='submit' className='p-3 w-96 bg-blue-500 hover:bg-blue-600 duration-200 mx-auto text-white rounded my-1'>Sign Up</button>
            
            <div className='w-96 flex items-center my-2'>
                <hr className='border-1 border-opacity-75 border-gray-400 rounded w-full' />
                <span className='ml-2 text-xs text-gray-400'>OR</span>
            </div>
          
          {/* Github */}
          <button type='button' className='flex justify-center cursor-pointer items-center p-3 w-96 bg-white border-2 border-gray-200 hover:border-gray-300 duration-200 mx-auto text-gray-400 rounded my-1' onClick={ () => {signIn('github', { callbackUrl: "/" })}}>
            <FontAwesomeIcon icon={ faGithub } className="h-5 mx-2"/>
            <p type='button' className=''>Sign In with Github</p>
          </button>

          {/* Facebook */}
          <button type='button' className='flex justify-center cursor-pointer items-center p-3 w-96 bg-white border-2 border-gray-200 hover:border-gray-300 duration-200 mx-auto text-gray-400 rounded my-1' onClick={ () => {signIn('facebook', { callbackUrl: "/" })}}>
            <FontAwesomeIcon icon={ faFacebook } className="h-5 mx-2"/>
            <p type='button' className=''>Sign In with Facebook</p>
          </button>

          {/* Google */}
          <button type='button' className='flex justify-center cursor-pointer items-center p-3 w-96 bg-white border-2 border-gray-200 hover:border-gray-300 duration-200 mx-auto text-gray-400 rounded my-1' onClick={ () => {signIn('google', { callbackUrl: "/" })}}>
            <FontAwesomeIcon icon={ faGoogle } className="h-5 mx-2"/>
            <p type='button' className=''>Sign In with Google</p>
          </button>
        </div>

        {/* Link to Signup */}
        <div className='w-full flex justify-center mt-8'>
          <p className='text-sm text-gray-400'>Already Registered? <Link href='/signin'><a className='text-blue-500 font-semibold cursor-pointer hover:text-blue-600 duration-100'>Sign In</a></Link></p>
        </div>


      </form>
    </main>
  )
}

export async function getServerSideProps(context){
  try {
    const session = await getSession(context)
    if(session) return { redirect: { destination: '/', permanent: false } }
    return { props: {} }
    
  } catch (error) {
    console.log(error)
  }
}